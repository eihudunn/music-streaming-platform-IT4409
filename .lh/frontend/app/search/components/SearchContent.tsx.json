{
    "sourceFile": "frontend/app/search/components/SearchContent.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 6,
            "patches": [
                {
                    "date": 1717458001242,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1717458017759,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,9 +32,9 @@\n         <div key={song.id} className=\"flex items-center gap-x-4 w-full\">\r\n           <div className=\"flex-1\">\r\n             <MediaItem onClick={(id: string) => onPlay(id)} data={song} />\r\n           </div>\r\n-          <LikeButton songId={song.id} />\r\n+          <LikeButton songId={song._id} />\r\n         </div>\r\n       ))}\r\n     </div>\r\n   );\r\n"
                },
                {
                    "date": 1717458038013,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,43 @@\n+'use client';\r\n+\r\n+import LikeButton from '@/components/musicBar/LikeButton';\r\n+import MediaItem from '@/components/MediaItem';\r\n+import useOnPlay from '@/hooks/useOnPlay';\r\n+import { Song } from '@/scheme/Song';\r\n+import React from 'react';\r\n+\r\n+interface SearchContentProps {\r\n+  songs: Song[];\r\n+}\r\n+\r\n+const SearchContent: React.FC<SearchContentProps> = ({ songs }) => {\r\n+  const onPlay = useOnPlay(songs);\r\n+\r\n+  if (songs?.length === 0) {\r\n+    return (\r\n+      <>\r\n+        <div className=\"flex flex-col gap-y-2 w-full px-6 text-neutral-400\">\r\n+          No songs found.\r\n+        </div>\r\n+        <div>\r\n+          Please make sure your words are spelled correctly, or use fewer or\r\n+          different keywords.\r\n+        </div>\r\n+      </>\r\n+    );\r\n+  }\r\n+  return (\r\n+    <div className=\"flex flex-col gap-y-2 w-full px-6\">\r\n+      {songs?.map((song) => (\r\n+        <div key={song.id} className=\"flex items-center gap-x-4 w-full\">\r\n+          <div className=\"flex-1\">\r\n+            <MediaItem onClick={(id: string) => onPlay(id)} data={song} />\r\n+          </div>\r\n+          <LikeButton songId={song.id} />\r\n+        </div>\r\n+      ))}\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default SearchContent;\r\n"
                },
                {
                    "date": 1717458118727,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,51 +32,8 @@\n         <div key={song.id} className=\"flex items-center gap-x-4 w-full\">\r\n           <div className=\"flex-1\">\r\n             <MediaItem onClick={(id: string) => onPlay(id)} data={song} />\r\n           </div>\r\n-          <LikeButton songId={song.id} />\r\n-        </div>\r\n-      ))}\r\n-    </div>\r\n-  );\r\n-};\r\n-\r\n-export default SearchContent;\r\n-'use client';\r\n-\r\n-import LikeButton from '@/components/musicBar/LikeButton';\r\n-import MediaItem from '@/components/MediaItem';\r\n-import useOnPlay from '@/hooks/useOnPlay';\r\n-import { Song } from '@/scheme/Song';\r\n-import React from 'react';\r\n-\r\n-interface SearchContentProps {\r\n-  songs: Song[];\r\n-}\r\n-\r\n-const SearchContent: React.FC<SearchContentProps> = ({ songs }) => {\r\n-  const onPlay = useOnPlay(songs);\r\n-\r\n-  if (songs?.length === 0) {\r\n-    return (\r\n-      <>\r\n-        <div className=\"flex flex-col gap-y-2 w-full px-6 text-neutral-400\">\r\n-          No songs found.\r\n-        </div>\r\n-        <div>\r\n-          Please make sure your words are spelled correctly, or use fewer or\r\n-          different keywords.\r\n-        </div>\r\n-      </>\r\n-    );\r\n-  }\r\n-  return (\r\n-    <div className=\"flex flex-col gap-y-2 w-full px-6\">\r\n-      {songs.map((song) => (\r\n-        <div key={song.id} className=\"flex items-center gap-x-4 w-full\">\r\n-          <div className=\"flex-1\">\r\n-            <MediaItem onClick={(id: string) => onPlay(id)} data={song} />\r\n-          </div>\r\n           <LikeButton songId={song._id} />\r\n         </div>\r\n       ))}\r\n     </div>\r\n"
                },
                {
                    "date": 1717458124867,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,9 +28,9 @@\n   }\r\n   return (\r\n     <div className=\"flex flex-col gap-y-2 w-full px-6\">\r\n       {songs?.map((song) => (\r\n-        <div key={song.id} className=\"flex items-center gap-x-4 w-full\">\r\n+        <div key={song._id} className=\"flex items-center gap-x-4 w-full\">\r\n           <div className=\"flex-1\">\r\n             <MediaItem onClick={(id: string) => onPlay(id)} data={song} />\r\n           </div>\r\n           <LikeButton songId={song._id} />\r\n"
                },
                {
                    "date": 1717458132234,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,9 +32,9 @@\n         <div key={song.id} className=\"flex items-center gap-x-4 w-full\">\r\n           <div className=\"flex-1\">\r\n             <MediaItem onClick={(id: string) => onPlay(id)} data={song} />\r\n           </div>\r\n-          <LikeButton songId={song._id} />\r\n+          <LikeButton songId={song.id} />\r\n         </div>\r\n       ))}\r\n     </div>\r\n   );\r\n"
                },
                {
                    "date": 1717458187902,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,43 @@\n+'use client';\r\n+\r\n+import LikeButton from '@/components/musicBar/LikeButton';\r\n+import MediaItem from '@/components/MediaItem';\r\n+import useOnPlay from '@/hooks/useOnPlay';\r\n+import { Song } from '@/scheme/Song';\r\n+import React from 'react';\r\n+\r\n+interface SearchContentProps {\r\n+  songs: Song[];\r\n+}\r\n+\r\n+const SearchContent: React.FC<SearchContentProps> = ({ songs }) => {\r\n+  const onPlay = useOnPlay(songs);\r\n+\r\n+  if (songs?.length === 0) {\r\n+    return (\r\n+      <>\r\n+        <div className=\"flex flex-col gap-y-2 w-full px-6 text-neutral-400\">\r\n+          No songs found.\r\n+        </div>\r\n+        <div>\r\n+          Please make sure your words are spelled correctly, or use fewer or\r\n+          different keywords.\r\n+        </div>\r\n+      </>\r\n+    );\r\n+  }\r\n+  return (\r\n+    <div className=\"flex flex-col gap-y-2 w-full px-6\">\r\n+      {songs?.map((song) => (\r\n+        <div key={song.id} className=\"flex items-center gap-x-4 w-full\">\r\n+          <div className=\"flex-1\">\r\n+            <MediaItem onClick={() => onPlay(id)} data={song} />\r\n+          </div>\r\n+          <LikeButton songId={song.id} />\r\n+        </div>\r\n+      ))}\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default SearchContent;\r\n"
                }
            ],
            "date": 1717458001242,
            "name": "Commit-0",
            "content": "'use client';\r\n\r\nimport LikeButton from '@/components/musicBar/LikeButton';\r\nimport MediaItem from '@/components/MediaItem';\r\nimport useOnPlay from '@/hooks/useOnPlay';\r\nimport { Song } from '@/scheme/Song';\r\nimport React from 'react';\r\n\r\ninterface SearchContentProps {\r\n  songs: Song[];\r\n}\r\n\r\nconst SearchContent: React.FC<SearchContentProps> = ({ songs }) => {\r\n  const onPlay = useOnPlay(songs);\r\n\r\n  if (songs?.length === 0) {\r\n    return (\r\n      <>\r\n        <div className=\"flex flex-col gap-y-2 w-full px-6 text-neutral-400\">\r\n          No songs found.\r\n        </div>\r\n        <div>\r\n          Please make sure your words are spelled correctly, or use fewer or\r\n          different keywords.\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n  return (\r\n    <div className=\"flex flex-col gap-y-2 w-full px-6\">\r\n      {songs.map((song) => (\r\n        <div key={song.id} className=\"flex items-center gap-x-4 w-full\">\r\n          <div className=\"flex-1\">\r\n            <MediaItem onClick={(id: string) => onPlay(id)} data={song} />\r\n          </div>\r\n          <LikeButton songId={song.id} />\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchContent;\r\n"
        }
    ]
}