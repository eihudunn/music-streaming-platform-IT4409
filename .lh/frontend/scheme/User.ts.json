{
    "sourceFile": "frontend/scheme/User.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 3,
            "patches": [
                {
                    "date": 1717472693822,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1717472700170,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,91 @@\n+import mongoose, { models, Schema } from 'mongoose';\r\n+\r\n+const UserSchema = new Schema(\r\n+  {\r\n+    username: {\r\n+      type: String,\r\n+      unique: true,\r\n+      required: true,\r\n+    },\r\n+    avatarImg: {\r\n+      type: String,\r\n+      default:\r\n+        'https://upload.wikimedia.org/wikipedia/commons/a/af/Default_avatar_profile.jpg',\r\n+    },\r\n+    email: {\r\n+      type: String,\r\n+      unique: true,\r\n+      required: true,\r\n+    },\r\n+    searchTitle: {\r\n+      type: String,\r\n+    },\r\n+    password: {\r\n+      type: String,\r\n+    },\r\n+    following: [\r\n+      {\r\n+        type: mongoose.Schema.Types.ObjectId,\r\n+        ref: 'User',\r\n+      },\r\n+    ],\r\n+    artistFollowed: [\r\n+      {\r\n+        type: mongoose.Schema.Types.ObjectId,\r\n+        ref: 'User',\r\n+      },\r\n+    ],\r\n+    playlists: [\r\n+      {\r\n+        type: mongoose.Schema.Types.ObjectId,\r\n+        ref: 'Playlist',\r\n+      },\r\n+    ],\r\n+    albumsFollowed: [\r\n+      {\r\n+        type: mongoose.Schema.Types.ObjectId,\r\n+        ref: 'Album',\r\n+      },\r\n+    ],\r\n+    likedTracks: [\r\n+      {\r\n+        type: mongoose.Schema.Types.ObjectId,\r\n+        ref: 'Track',\r\n+      },\r\n+    ],\r\n+    preferedGenre: [\r\n+      {\r\n+        genre: {\r\n+          type: String,\r\n+          required: true,\r\n+        },\r\n+        weight: {\r\n+          type: Number,\r\n+          required: true,\r\n+        },\r\n+      },\r\n+    ],\r\n+  },\r\n+  { timestamps: true },\r\n+);\r\n+\r\n+const User = models?.User || mongoose.model('User', UserSchema);\r\n+export default User;\r\n+\r\n+export interface UserDto {\r\n+  id: string;\r\n+  username: string;\r\n+  searchTitle?: string;\r\n+  avatarImg?: string;\r\n+  email?: string;\r\n+  password?: string;\r\n+  following?: string[];\r\n+  artistFollowed?: UserDto[];\r\n+  playlists?: string[];\r\n+  albumsFollowed?: Album[];\r\n+  likedTracks?: string[];\r\n+  preferedGenre?: {\r\n+    genre: string;\r\n+    weight: number;\r\n+  }[];\r\n+}\r\n"
                },
                {
                    "date": 1717472705451,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,7 @@\n import mongoose, { models, Schema } from 'mongoose';\r\n import Album from './Album';\r\n+import { Song } from './Song';\r\n \r\n const UserSchema = new Schema(\r\n   {\r\n     username: {\r\n"
                },
                {
                    "date": 1717472710746,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,94 @@\n+import mongoose, { models, Schema } from 'mongoose';\r\n+import Album from './Album';\r\n+import { Song } from './Song';\r\n+import { Playlist } from './Playlist';\r\n+\r\n+const UserSchema = new Schema(\r\n+  {\r\n+    username: {\r\n+      type: String,\r\n+      unique: true,\r\n+      required: true,\r\n+    },\r\n+    avatarImg: {\r\n+      type: String,\r\n+      default:\r\n+        'https://upload.wikimedia.org/wikipedia/commons/a/af/Default_avatar_profile.jpg',\r\n+    },\r\n+    email: {\r\n+      type: String,\r\n+      unique: true,\r\n+      required: true,\r\n+    },\r\n+    searchTitle: {\r\n+      type: String,\r\n+    },\r\n+    password: {\r\n+      type: String,\r\n+    },\r\n+    following: [\r\n+      {\r\n+        type: mongoose.Schema.Types.ObjectId,\r\n+        ref: 'User',\r\n+      },\r\n+    ],\r\n+    artistFollowed: [\r\n+      {\r\n+        type: mongoose.Schema.Types.ObjectId,\r\n+        ref: 'User',\r\n+      },\r\n+    ],\r\n+    playlists: [\r\n+      {\r\n+        type: mongoose.Schema.Types.ObjectId,\r\n+        ref: 'Playlist',\r\n+      },\r\n+    ],\r\n+    albumsFollowed: [\r\n+      {\r\n+        type: mongoose.Schema.Types.ObjectId,\r\n+        ref: 'Album',\r\n+      },\r\n+    ],\r\n+    likedTracks: [\r\n+      {\r\n+        type: mongoose.Schema.Types.ObjectId,\r\n+        ref: 'Track',\r\n+      },\r\n+    ],\r\n+    preferedGenre: [\r\n+      {\r\n+        genre: {\r\n+          type: String,\r\n+          required: true,\r\n+        },\r\n+        weight: {\r\n+          type: Number,\r\n+          required: true,\r\n+        },\r\n+      },\r\n+    ],\r\n+  },\r\n+  { timestamps: true },\r\n+);\r\n+\r\n+const User = models?.User || mongoose.model('User', UserSchema);\r\n+export default User;\r\n+\r\n+export interface UserDto {\r\n+  id: string;\r\n+  username: string;\r\n+  searchTitle?: string;\r\n+  avatarImg?: string;\r\n+  email?: string;\r\n+  password?: string;\r\n+  following?: string[];\r\n+  artistFollowed?: UserDto[];\r\n+  playlists?: Playlist[];\r\n+  albumsFollowed?: Album[];\r\n+  likedTracks?: Song[];\r\n+  preferedGenre?: {\r\n+    genre: string;\r\n+    weight: number;\r\n+  }[];\r\n+}\r\n"
                }
            ],
            "date": 1717472693822,
            "name": "Commit-0",
            "content": "import mongoose, { models, Schema } from 'mongoose';\r\n\r\nconst UserSchema = new Schema(\r\n  {\r\n    username: {\r\n      type: String,\r\n      unique: true,\r\n      required: true,\r\n    },\r\n    avatarImg: {\r\n      type: String,\r\n      default:\r\n        'https://upload.wikimedia.org/wikipedia/commons/a/af/Default_avatar_profile.jpg',\r\n    },\r\n    email: {\r\n      type: String,\r\n      unique: true,\r\n      required: true,\r\n    },\r\n    searchTitle: {\r\n      type: String,\r\n    },\r\n    password: {\r\n      type: String,\r\n    },\r\n    following: [\r\n      {\r\n        type: mongoose.Schema.Types.ObjectId,\r\n        ref: 'User',\r\n      },\r\n    ],\r\n    artistFollowed: [\r\n      {\r\n        type: mongoose.Schema.Types.ObjectId,\r\n        ref: 'User',\r\n      },\r\n    ],\r\n    playlists: [\r\n      {\r\n        type: mongoose.Schema.Types.ObjectId,\r\n        ref: 'Playlist',\r\n      },\r\n    ],\r\n    albumsFollowed: [\r\n      {\r\n        type: mongoose.Schema.Types.ObjectId,\r\n        ref: 'Album',\r\n      },\r\n    ],\r\n    likedTracks: [\r\n      {\r\n        type: mongoose.Schema.Types.ObjectId,\r\n        ref: 'Track',\r\n      },\r\n    ],\r\n    preferedGenre: [\r\n      {\r\n        genre: {\r\n          type: String,\r\n          required: true,\r\n        },\r\n        weight: {\r\n          type: Number,\r\n          required: true,\r\n        },\r\n      },\r\n    ],\r\n  },\r\n  { timestamps: true },\r\n);\r\n\r\nconst User = models?.User || mongoose.model('User', UserSchema);\r\nexport default User;\r\n\r\nexport interface UserDto {\r\n  id: string;\r\n  username: string;\r\n  searchTitle?: string;\r\n  avatarImg?: string;\r\n  email?: string;\r\n  password?: string;\r\n  following?: string[];\r\n  artistFollowed?: user[];\r\n  playlists?: string[];\r\n  albumsFollowed?: string[];\r\n  likedTracks?: string[];\r\n  preferedGenre?: {\r\n    genre: string;\r\n    weight: number;\r\n  }[];\r\n}\r\n"
        }
    ]
}